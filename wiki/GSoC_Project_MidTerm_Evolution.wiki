#summary documents for GSoC project TapestryTools midterm evolution.

<wiki:toc max_depth="3" />

= What we have already =
 
 Note: This part is just corresponding with [http://code.google.com/p/tapestrytools/ project proposal]

== 1. Project Page Component Creation Wizard ==

This part includes features in project proposal:
 * 1. Tapertry application creation wizard
 * 3. Tapestry page/component creation wizard

Check features [http://code.google.com/p/tapestrytools/wiki/Project_Page_Component_Creation_Wizard details here].

== 2. Tapestry support in Web Page Editor ==

Include features in proposal:
 * 4. Add Tapestry component drap-and-drop feature support for .tml file editor
 * 8.Autocomplete of properties from the .java page when editing the .tml file 

Check features [http://code.google.com/p/tapestrytools/wiki/Tapestry_support_in_Web_Page_Editor details here].

== 3. Partner location and content assist for Tapestry ==

Include features in proposal:
 * 5. Add convenient way for the Web Page Editor to change-over between a Tapestry page's .tml file and .java file 
 * 6. Add Tapestry built in and custom components autocomplete function for WTP Web Page Editor's source view
 * 8.Autocomplete of properties from the .java page when editing the .tml file 

Check features [http://code.google.com/p/tapestrytools/wiki/Partner_location_and_content_assist_helper here]

= Next steps =

== Necessary features==

=== 1. Tapestry's built in Live Class Reloading support === 

It should be possible to change Java code, template files, properties etc, and see the results without to restart the web server. In the past there were some problems with WTP and Live Class Reloading(click here to check details about Class Reloading feature and its importance) , our project will fix this problem. 

=== 2. Autocomplete of properties from the .java page when editing the .tml file ===

In the Source Page of the Web Page Editor, add the Tapestry tag, (for example ${prop:index}). With the cursor inside the brackets, hit Ctrl+spacebar, should see a pop-up with a list of all the available properties defined in the corresponding java class. Check details here.

=== 3. Add MetaData for Tapestry components in Web Page Editor's palette ===

[http://tapestrytools.googlecode.com/files/3-1.png] 

Add proper icons and text label for tapestry components to improve their looking. These tapestry components are current ugly just use default icons and default text.

=== 4. Add Eclipse Indigo support for this tool ===

Our TapestryTools can only be running in Eclipse Helios environment, we should add Eclipse Indigo support in the coming month.

== Optiona features==

=== 1.Validation function in Tapestry .tml file source view ===

[http://tapestrytools.googlecode.com/files/3-2.png] 

Beyond the basic JSP validation already provided with the JSP editor, this editor supplies semantic validation of the Tapestry standard tag libraries for both EL and non-EL attribute values.